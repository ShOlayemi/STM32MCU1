
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008cc  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a54  08000a5c  00001a5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a54  08000a54  00001a5c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000a54  08000a54  00001a5c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000a54  08000a5c  00001a5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a54  08000a54  00001a54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000a58  08000a58  00001a58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001a5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001a5c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001a5c  2**0
                  CONTENTS, READONLY
 13 .debug_line   000010c9  00000000  00000000  00001a8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line_str 0000004f  00000000  00000000  00002b55  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_info   00000aba  00000000  00000000  00002ba4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 00000302  00000000  00000000  0000365e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 000000c8  00000000  00000000  00003960  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008c89  00000000  00000000  00003a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_rnglists 0000008c  00000000  00000000  0000c6b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  00000a42  00000000  00000000  0000c73d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .comment      00000043  00000000  00000000  0000d17f  2**0
                  CONTENTS, READONLY
 22 .debug_frame  00000288  00000000  00000000  0000d1c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000a3c 	.word	0x08000a3c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000a3c 	.word	0x08000a3c

080001c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001c8:	480d      	ldr	r0, [pc, #52]	@ (8000200 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001ca:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001cc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001d0:	480c      	ldr	r0, [pc, #48]	@ (8000204 <LoopForever+0x6>)
  ldr r1, =_edata
 80001d2:	490d      	ldr	r1, [pc, #52]	@ (8000208 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001d4:	4a0d      	ldr	r2, [pc, #52]	@ (800020c <LoopForever+0xe>)
  movs r3, #0
 80001d6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001d8:	e002      	b.n	80001e0 <LoopCopyDataInit>

080001da <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001da:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001dc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001de:	3304      	adds	r3, #4

080001e0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001e0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001e2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001e4:	d3f9      	bcc.n	80001da <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001e6:	4a0a      	ldr	r2, [pc, #40]	@ (8000210 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001e8:	4c0a      	ldr	r4, [pc, #40]	@ (8000214 <LoopForever+0x16>)
  movs r3, #0
 80001ea:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001ec:	e001      	b.n	80001f2 <LoopFillZerobss>

080001ee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001ee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001f0:	3204      	adds	r2, #4

080001f2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001f2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001f4:	d3fb      	bcc.n	80001ee <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001f6:	f000 fbfd 	bl	80009f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001fa:	f000 f825 	bl	8000248 <main>

080001fe <LoopForever>:

LoopForever:
  b LoopForever
 80001fe:	e7fe      	b.n	80001fe <LoopForever>
  ldr   r0, =_estack
 8000200:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000204:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000208:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800020c:	08000a5c 	.word	0x08000a5c
  ldr r2, =_sbss
 8000210:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000214:	2000001c 	.word	0x2000001c

08000218 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000218:	e7fe      	b.n	8000218 <ADC_IRQHandler>
	...

0800021c <delay>:
#define HIGH 1
#define LOW 0
#define BTN_PRESSED LOW

void delay(void)
{
 800021c:	b480      	push	{r7}
 800021e:	b083      	sub	sp, #12
 8000220:	af00      	add	r7, sp, #0
	// this will introduce ~200ms delay when system clock is 16MHz
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
 8000222:	2300      	movs	r3, #0
 8000224:	607b      	str	r3, [r7, #4]
 8000226:	e002      	b.n	800022e <delay+0x12>
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	3301      	adds	r3, #1
 800022c:	607b      	str	r3, [r7, #4]
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	4a04      	ldr	r2, [pc, #16]	@ (8000244 <delay+0x28>)
 8000232:	4293      	cmp	r3, r2
 8000234:	d9f8      	bls.n	8000228 <delay+0xc>
}
 8000236:	bf00      	nop
 8000238:	bf00      	nop
 800023a:	370c      	adds	r7, #12
 800023c:	46bd      	mov	sp, r7
 800023e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000242:	4770      	bx	lr
 8000244:	0003d08f 	.word	0x0003d08f

08000248 <main>:

int main(void)
{
 8000248:	b580      	push	{r7, lr}
 800024a:	b086      	sub	sp, #24
 800024c:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GPIOBtn;

	memset(&GpioLed,0,sizeof(GpioLed));
 800024e:	f107 030c 	add.w	r3, r7, #12
 8000252:	220c      	movs	r2, #12
 8000254:	2100      	movs	r1, #0
 8000256:	4618      	mov	r0, r3
 8000258:	f000 fbc4 	bl	80009e4 <memset>
	memset(&GPIOBtn,0,sizeof(GPIOBtn));
 800025c:	463b      	mov	r3, r7
 800025e:	220c      	movs	r2, #12
 8000260:	2100      	movs	r1, #0
 8000262:	4618      	mov	r0, r3
 8000264:	f000 fbbe 	bl	80009e4 <memset>

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOD;
 8000268:	4b1a      	ldr	r3, [pc, #104]	@ (80002d4 <main+0x8c>)
 800026a:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800026c:	230c      	movs	r3, #12
 800026e:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000270:	2301      	movs	r3, #1
 8000272:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000274:	2300      	movs	r3, #0
 8000276:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000278:	2300      	movs	r3, #0
 800027a:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800027c:	2300      	movs	r3, #0
 800027e:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 8000280:	2101      	movs	r1, #1
 8000282:	4814      	ldr	r0, [pc, #80]	@ (80002d4 <main+0x8c>)
 8000284:	f000 f838 	bl	80002f8 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000288:	f107 030c 	add.w	r3, r7, #12
 800028c:	4618      	mov	r0, r3
 800028e:	f000 f91b 	bl	80004c8 <GPIO_Init>


	//this is btn gpio configuration
 	GPIOBtn.pGPIOx = GPIOD;
 8000292:	4b10      	ldr	r3, [pc, #64]	@ (80002d4 <main+0x8c>)
 8000294:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000296:	2305      	movs	r3, #5
 8000298:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 800029a:	2304      	movs	r3, #4
 800029c:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800029e:	2302      	movs	r3, #2
 80002a0:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 80002a2:	2301      	movs	r3, #1
 80002a4:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 80002a6:	2101      	movs	r1, #1
 80002a8:	480a      	ldr	r0, [pc, #40]	@ (80002d4 <main+0x8c>)
 80002aa:	f000 f825 	bl	80002f8 <GPIO_PeriClockControl>

	GPIO_Init(&GPIOBtn);
 80002ae:	463b      	mov	r3, r7
 80002b0:	4618      	mov	r0, r3
 80002b2:	f000 f909 	bl	80004c8 <GPIO_Init>

	GPIO_WriteToOutputPin(GPIOD,GPIO_PIN_NO_12,GPIO_PIN_RESET);
 80002b6:	2200      	movs	r2, #0
 80002b8:	210c      	movs	r1, #12
 80002ba:	4806      	ldr	r0, [pc, #24]	@ (80002d4 <main+0x8c>)
 80002bc:	f000 fa88 	bl	80007d0 <GPIO_WriteToOutputPin>
	//IRQ configurations
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5,NVIC_IRQ_PRI15);
 80002c0:	210f      	movs	r1, #15
 80002c2:	2017      	movs	r0, #23
 80002c4:	f000 fb44 	bl	8000950 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5,ENABLE);
 80002c8:	2101      	movs	r1, #1
 80002ca:	2017      	movs	r0, #23
 80002cc:	f000 faba 	bl	8000844 <GPIO_IRQInterruptConfig>

    while(1);
 80002d0:	bf00      	nop
 80002d2:	e7fd      	b.n	80002d0 <main+0x88>
 80002d4:	40020c00 	.word	0x40020c00

080002d8 <EXTI9_5_IRQHandler>:

}


void EXTI9_5_IRQHandler(void)
{
 80002d8:	b580      	push	{r7, lr}
 80002da:	af00      	add	r7, sp, #0
    delay(); //200ms . wait till button de-bouncing gets over
 80002dc:	f7ff ff9e 	bl	800021c <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_5); //clear the pending event from exti line
 80002e0:	2005      	movs	r0, #5
 80002e2:	f000 fb5f 	bl	80009a4 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 80002e6:	210c      	movs	r1, #12
 80002e8:	4802      	ldr	r0, [pc, #8]	@ (80002f4 <EXTI9_5_IRQHandler+0x1c>)
 80002ea:	f000 fa96 	bl	800081a <GPIO_ToggleOutputPin>
}
 80002ee:	bf00      	nop
 80002f0:	bd80      	pop	{r7, pc}
 80002f2:	bf00      	nop
 80002f4:	40020c00 	.word	0x40020c00

080002f8 <GPIO_PeriClockControl>:
 * @Note              -  none

 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002f8:	b480      	push	{r7}
 80002fa:	b083      	sub	sp, #12
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	6078      	str	r0, [r7, #4]
 8000300:	460b      	mov	r3, r1
 8000302:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000304:	78fb      	ldrb	r3, [r7, #3]
 8000306:	2b01      	cmp	r3, #1
 8000308:	d162      	bne.n	80003d0 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a64      	ldr	r2, [pc, #400]	@ (80004a0 <GPIO_PeriClockControl+0x1a8>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000312:	4b64      	ldr	r3, [pc, #400]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000314:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000316:	4a63      	ldr	r2, [pc, #396]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000318:	f043 0301 	orr.w	r3, r3, #1
 800031c:	6313      	str	r3, [r2, #48]	@ 0x30
			GPIOI_PCLK_DI();
		}

	}

}
 800031e:	e0b9      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a61      	ldr	r2, [pc, #388]	@ (80004a8 <GPIO_PeriClockControl+0x1b0>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000328:	4b5e      	ldr	r3, [pc, #376]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800032a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800032c:	4a5d      	ldr	r2, [pc, #372]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800032e:	f043 0302 	orr.w	r3, r3, #2
 8000332:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000334:	e0ae      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a5c      	ldr	r2, [pc, #368]	@ (80004ac <GPIO_PeriClockControl+0x1b4>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800033e:	4b59      	ldr	r3, [pc, #356]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000340:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000342:	4a58      	ldr	r2, [pc, #352]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000344:	f043 0304 	orr.w	r3, r3, #4
 8000348:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800034a:	e0a3      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a58      	ldr	r2, [pc, #352]	@ (80004b0 <GPIO_PeriClockControl+0x1b8>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000354:	4b53      	ldr	r3, [pc, #332]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000356:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000358:	4a52      	ldr	r2, [pc, #328]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800035a:	f043 0308 	orr.w	r3, r3, #8
 800035e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000360:	e098      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a53      	ldr	r2, [pc, #332]	@ (80004b4 <GPIO_PeriClockControl+0x1bc>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800036a:	4b4e      	ldr	r3, [pc, #312]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800036c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800036e:	4a4d      	ldr	r2, [pc, #308]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000370:	f043 0310 	orr.w	r3, r3, #16
 8000374:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000376:	e08d      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a4f      	ldr	r2, [pc, #316]	@ (80004b8 <GPIO_PeriClockControl+0x1c0>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000380:	4b48      	ldr	r3, [pc, #288]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000382:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000384:	4a47      	ldr	r2, [pc, #284]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000386:	f043 0320 	orr.w	r3, r3, #32
 800038a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800038c:	e082      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a4a      	ldr	r2, [pc, #296]	@ (80004bc <GPIO_PeriClockControl+0x1c4>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000396:	4b43      	ldr	r3, [pc, #268]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000398:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800039a:	4a42      	ldr	r2, [pc, #264]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800039c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003a0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003a2:	e077      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a46      	ldr	r2, [pc, #280]	@ (80004c0 <GPIO_PeriClockControl+0x1c8>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d106      	bne.n	80003ba <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80003ac:	4b3d      	ldr	r3, [pc, #244]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 80003ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003b0:	4a3c      	ldr	r2, [pc, #240]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 80003b2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003b6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b8:	e06c      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a41      	ldr	r2, [pc, #260]	@ (80004c4 <GPIO_PeriClockControl+0x1cc>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d168      	bne.n	8000494 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80003c2:	4b38      	ldr	r3, [pc, #224]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 80003c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003c6:	4a37      	ldr	r2, [pc, #220]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 80003c8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80003cc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ce:	e061      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a33      	ldr	r2, [pc, #204]	@ (80004a0 <GPIO_PeriClockControl+0x1a8>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d106      	bne.n	80003e6 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80003d8:	4b32      	ldr	r3, [pc, #200]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003dc:	4a31      	ldr	r2, [pc, #196]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 80003de:	f023 0301 	bic.w	r3, r3, #1
 80003e2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003e4:	e056      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4a2f      	ldr	r2, [pc, #188]	@ (80004a8 <GPIO_PeriClockControl+0x1b0>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d106      	bne.n	80003fc <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_EN();
 80003ee:	4b2d      	ldr	r3, [pc, #180]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 80003f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003f2:	4a2c      	ldr	r2, [pc, #176]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 80003f4:	f043 0302 	orr.w	r3, r3, #2
 80003f8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003fa:	e04b      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	4a2b      	ldr	r2, [pc, #172]	@ (80004ac <GPIO_PeriClockControl+0x1b4>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d106      	bne.n	8000412 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000404:	4b27      	ldr	r3, [pc, #156]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000406:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000408:	4a26      	ldr	r2, [pc, #152]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800040a:	f023 0304 	bic.w	r3, r3, #4
 800040e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000410:	e040      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a26      	ldr	r2, [pc, #152]	@ (80004b0 <GPIO_PeriClockControl+0x1b8>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d106      	bne.n	8000428 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 800041a:	4b22      	ldr	r3, [pc, #136]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800041e:	4a21      	ldr	r2, [pc, #132]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000420:	f023 0308 	bic.w	r3, r3, #8
 8000424:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000426:	e035      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a22      	ldr	r2, [pc, #136]	@ (80004b4 <GPIO_PeriClockControl+0x1bc>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d106      	bne.n	800043e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000430:	4b1c      	ldr	r3, [pc, #112]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000432:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000434:	4a1b      	ldr	r2, [pc, #108]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000436:	f023 0310 	bic.w	r3, r3, #16
 800043a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800043c:	e02a      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4a1d      	ldr	r2, [pc, #116]	@ (80004b8 <GPIO_PeriClockControl+0x1c0>)
 8000442:	4293      	cmp	r3, r2
 8000444:	d106      	bne.n	8000454 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000446:	4b17      	ldr	r3, [pc, #92]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000448:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800044a:	4a16      	ldr	r2, [pc, #88]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800044c:	f023 0320 	bic.w	r3, r3, #32
 8000450:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000452:	e01f      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	4a19      	ldr	r2, [pc, #100]	@ (80004bc <GPIO_PeriClockControl+0x1c4>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d106      	bne.n	800046a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 800045c:	4b11      	ldr	r3, [pc, #68]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800045e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000460:	4a10      	ldr	r2, [pc, #64]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000462:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000466:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000468:	e014      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	4a14      	ldr	r2, [pc, #80]	@ (80004c0 <GPIO_PeriClockControl+0x1c8>)
 800046e:	4293      	cmp	r3, r2
 8000470:	d106      	bne.n	8000480 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000472:	4b0c      	ldr	r3, [pc, #48]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000474:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000476:	4a0b      	ldr	r2, [pc, #44]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 8000478:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800047c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800047e:	e009      	b.n	8000494 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	4a10      	ldr	r2, [pc, #64]	@ (80004c4 <GPIO_PeriClockControl+0x1cc>)
 8000484:	4293      	cmp	r3, r2
 8000486:	d105      	bne.n	8000494 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000488:	4b06      	ldr	r3, [pc, #24]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800048a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800048c:	4a05      	ldr	r2, [pc, #20]	@ (80004a4 <GPIO_PeriClockControl+0x1ac>)
 800048e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000492:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000494:	bf00      	nop
 8000496:	370c      	adds	r7, #12
 8000498:	46bd      	mov	sp, r7
 800049a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049e:	4770      	bx	lr
 80004a0:	40020000 	.word	0x40020000
 80004a4:	40023800 	.word	0x40023800
 80004a8:	40020400 	.word	0x40020400
 80004ac:	40020800 	.word	0x40020800
 80004b0:	40020c00 	.word	0x40020c00
 80004b4:	40021000 	.word	0x40021000
 80004b8:	40021400 	.word	0x40021400
 80004bc:	40021800 	.word	0x40021800
 80004c0:	40021c00 	.word	0x40021c00
 80004c4:	40022000 	.word	0x40022000

080004c8 <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004c8:	b580      	push	{r7, lr}
 80004ca:	b086      	sub	sp, #24
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 80004d0:	2300      	movs	r3, #0
 80004d2:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	2101      	movs	r1, #1
 80004da:	4618      	mov	r0, r3
 80004dc:	f7ff ff0c 	bl	80002f8 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	795b      	ldrb	r3, [r3, #5]
 80004e4:	2b03      	cmp	r3, #3
 80004e6:	d820      	bhi.n	800052a <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	795b      	ldrb	r3, [r3, #5]
 80004ec:	461a      	mov	r2, r3
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	791b      	ldrb	r3, [r3, #4]
 80004f2:	005b      	lsls	r3, r3, #1
 80004f4:	fa02 f303 	lsl.w	r3, r2, r3
 80004f8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	681a      	ldr	r2, [r3, #0]
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	791b      	ldrb	r3, [r3, #4]
 8000504:	005b      	lsls	r3, r3, #1
 8000506:	2103      	movs	r1, #3
 8000508:	fa01 f303 	lsl.w	r3, r1, r3
 800050c:	43db      	mvns	r3, r3
 800050e:	4619      	mov	r1, r3
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	400a      	ands	r2, r1
 8000516:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	6819      	ldr	r1, [r3, #0]
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	697a      	ldr	r2, [r7, #20]
 8000524:	430a      	orrs	r2, r1
 8000526:	601a      	str	r2, [r3, #0]
 8000528:	e0a4      	b.n	8000674 <GPIO_Init+0x1ac>

	}else
	{
		//this part will code later . ( interrupt mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	795b      	ldrb	r3, [r3, #5]
 800052e:	2b04      	cmp	r3, #4
 8000530:	d117      	bne.n	8000562 <GPIO_Init+0x9a>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000532:	4b9c      	ldr	r3, [pc, #624]	@ (80007a4 <GPIO_Init+0x2dc>)
 8000534:	68db      	ldr	r3, [r3, #12]
 8000536:	687a      	ldr	r2, [r7, #4]
 8000538:	7912      	ldrb	r2, [r2, #4]
 800053a:	4611      	mov	r1, r2
 800053c:	2201      	movs	r2, #1
 800053e:	408a      	lsls	r2, r1
 8000540:	4611      	mov	r1, r2
 8000542:	4a98      	ldr	r2, [pc, #608]	@ (80007a4 <GPIO_Init+0x2dc>)
 8000544:	430b      	orrs	r3, r1
 8000546:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000548:	4b96      	ldr	r3, [pc, #600]	@ (80007a4 <GPIO_Init+0x2dc>)
 800054a:	689b      	ldr	r3, [r3, #8]
 800054c:	687a      	ldr	r2, [r7, #4]
 800054e:	7912      	ldrb	r2, [r2, #4]
 8000550:	4611      	mov	r1, r2
 8000552:	2201      	movs	r2, #1
 8000554:	408a      	lsls	r2, r1
 8000556:	43d2      	mvns	r2, r2
 8000558:	4611      	mov	r1, r2
 800055a:	4a92      	ldr	r2, [pc, #584]	@ (80007a4 <GPIO_Init+0x2dc>)
 800055c:	400b      	ands	r3, r1
 800055e:	6093      	str	r3, [r2, #8]
 8000560:	e035      	b.n	80005ce <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	795b      	ldrb	r3, [r3, #5]
 8000566:	2b05      	cmp	r3, #5
 8000568:	d117      	bne.n	800059a <GPIO_Init+0xd2>
		{
			//1 . configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800056a:	4b8e      	ldr	r3, [pc, #568]	@ (80007a4 <GPIO_Init+0x2dc>)
 800056c:	689b      	ldr	r3, [r3, #8]
 800056e:	687a      	ldr	r2, [r7, #4]
 8000570:	7912      	ldrb	r2, [r2, #4]
 8000572:	4611      	mov	r1, r2
 8000574:	2201      	movs	r2, #1
 8000576:	408a      	lsls	r2, r1
 8000578:	4611      	mov	r1, r2
 800057a:	4a8a      	ldr	r2, [pc, #552]	@ (80007a4 <GPIO_Init+0x2dc>)
 800057c:	430b      	orrs	r3, r1
 800057e:	6093      	str	r3, [r2, #8]
			//Clear the corresponding FTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000580:	4b88      	ldr	r3, [pc, #544]	@ (80007a4 <GPIO_Init+0x2dc>)
 8000582:	68db      	ldr	r3, [r3, #12]
 8000584:	687a      	ldr	r2, [r7, #4]
 8000586:	7912      	ldrb	r2, [r2, #4]
 8000588:	4611      	mov	r1, r2
 800058a:	2201      	movs	r2, #1
 800058c:	408a      	lsls	r2, r1
 800058e:	43d2      	mvns	r2, r2
 8000590:	4611      	mov	r1, r2
 8000592:	4a84      	ldr	r2, [pc, #528]	@ (80007a4 <GPIO_Init+0x2dc>)
 8000594:	400b      	ands	r3, r1
 8000596:	60d3      	str	r3, [r2, #12]
 8000598:	e019      	b.n	80005ce <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT )
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	795b      	ldrb	r3, [r3, #5]
 800059e:	2b06      	cmp	r3, #6
 80005a0:	d115      	bne.n	80005ce <GPIO_Init+0x106>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a2:	4b80      	ldr	r3, [pc, #512]	@ (80007a4 <GPIO_Init+0x2dc>)
 80005a4:	689b      	ldr	r3, [r3, #8]
 80005a6:	687a      	ldr	r2, [r7, #4]
 80005a8:	7912      	ldrb	r2, [r2, #4]
 80005aa:	4611      	mov	r1, r2
 80005ac:	2201      	movs	r2, #1
 80005ae:	408a      	lsls	r2, r1
 80005b0:	4611      	mov	r1, r2
 80005b2:	4a7c      	ldr	r2, [pc, #496]	@ (80007a4 <GPIO_Init+0x2dc>)
 80005b4:	430b      	orrs	r3, r1
 80005b6:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b8:	4b7a      	ldr	r3, [pc, #488]	@ (80007a4 <GPIO_Init+0x2dc>)
 80005ba:	68db      	ldr	r3, [r3, #12]
 80005bc:	687a      	ldr	r2, [r7, #4]
 80005be:	7912      	ldrb	r2, [r2, #4]
 80005c0:	4611      	mov	r1, r2
 80005c2:	2201      	movs	r2, #1
 80005c4:	408a      	lsls	r2, r1
 80005c6:	4611      	mov	r1, r2
 80005c8:	4a76      	ldr	r2, [pc, #472]	@ (80007a4 <GPIO_Init+0x2dc>)
 80005ca:	430b      	orrs	r3, r1
 80005cc:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	791b      	ldrb	r3, [r3, #4]
 80005d2:	089b      	lsrs	r3, r3, #2
 80005d4:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	791b      	ldrb	r3, [r3, #4]
 80005da:	f003 0303 	and.w	r3, r3, #3
 80005de:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4a70      	ldr	r2, [pc, #448]	@ (80007a8 <GPIO_Init+0x2e0>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d032      	beq.n	8000650 <GPIO_Init+0x188>
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a6f      	ldr	r2, [pc, #444]	@ (80007ac <GPIO_Init+0x2e4>)
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d02b      	beq.n	800064c <GPIO_Init+0x184>
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	4a6d      	ldr	r2, [pc, #436]	@ (80007b0 <GPIO_Init+0x2e8>)
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d024      	beq.n	8000648 <GPIO_Init+0x180>
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	4a6c      	ldr	r2, [pc, #432]	@ (80007b4 <GPIO_Init+0x2ec>)
 8000604:	4293      	cmp	r3, r2
 8000606:	d01d      	beq.n	8000644 <GPIO_Init+0x17c>
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	4a6a      	ldr	r2, [pc, #424]	@ (80007b8 <GPIO_Init+0x2f0>)
 800060e:	4293      	cmp	r3, r2
 8000610:	d016      	beq.n	8000640 <GPIO_Init+0x178>
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	4a69      	ldr	r2, [pc, #420]	@ (80007bc <GPIO_Init+0x2f4>)
 8000618:	4293      	cmp	r3, r2
 800061a:	d00f      	beq.n	800063c <GPIO_Init+0x174>
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	4a67      	ldr	r2, [pc, #412]	@ (80007c0 <GPIO_Init+0x2f8>)
 8000622:	4293      	cmp	r3, r2
 8000624:	d008      	beq.n	8000638 <GPIO_Init+0x170>
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	4a66      	ldr	r2, [pc, #408]	@ (80007c4 <GPIO_Init+0x2fc>)
 800062c:	4293      	cmp	r3, r2
 800062e:	d101      	bne.n	8000634 <GPIO_Init+0x16c>
 8000630:	2307      	movs	r3, #7
 8000632:	e00e      	b.n	8000652 <GPIO_Init+0x18a>
 8000634:	2300      	movs	r3, #0
 8000636:	e00c      	b.n	8000652 <GPIO_Init+0x18a>
 8000638:	2306      	movs	r3, #6
 800063a:	e00a      	b.n	8000652 <GPIO_Init+0x18a>
 800063c:	2305      	movs	r3, #5
 800063e:	e008      	b.n	8000652 <GPIO_Init+0x18a>
 8000640:	2304      	movs	r3, #4
 8000642:	e006      	b.n	8000652 <GPIO_Init+0x18a>
 8000644:	2303      	movs	r3, #3
 8000646:	e004      	b.n	8000652 <GPIO_Init+0x18a>
 8000648:	2302      	movs	r3, #2
 800064a:	e002      	b.n	8000652 <GPIO_Init+0x18a>
 800064c:	2301      	movs	r3, #1
 800064e:	e000      	b.n	8000652 <GPIO_Init+0x18a>
 8000650:	2300      	movs	r3, #0
 8000652:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000654:	4b5c      	ldr	r3, [pc, #368]	@ (80007c8 <GPIO_Init+0x300>)
 8000656:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000658:	4a5b      	ldr	r2, [pc, #364]	@ (80007c8 <GPIO_Init+0x300>)
 800065a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800065e:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 8000660:	7c7a      	ldrb	r2, [r7, #17]
 8000662:	7cbb      	ldrb	r3, [r7, #18]
 8000664:	009b      	lsls	r3, r3, #2
 8000666:	fa02 f103 	lsl.w	r1, r2, r3
 800066a:	4a58      	ldr	r2, [pc, #352]	@ (80007cc <GPIO_Init+0x304>)
 800066c:	7cfb      	ldrb	r3, [r7, #19]
 800066e:	3302      	adds	r3, #2
 8000670:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//3 . enable the exti interrupt delivery using IMR
//		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	799b      	ldrb	r3, [r3, #6]
 8000678:	461a      	mov	r2, r3
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	791b      	ldrb	r3, [r3, #4]
 800067e:	005b      	lsls	r3, r3, #1
 8000680:	fa02 f303 	lsl.w	r3, r2, r3
 8000684:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	689a      	ldr	r2, [r3, #8]
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	791b      	ldrb	r3, [r3, #4]
 8000690:	005b      	lsls	r3, r3, #1
 8000692:	2103      	movs	r1, #3
 8000694:	fa01 f303 	lsl.w	r3, r1, r3
 8000698:	43db      	mvns	r3, r3
 800069a:	4619      	mov	r1, r3
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	400a      	ands	r2, r1
 80006a2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	6899      	ldr	r1, [r3, #8]
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	697a      	ldr	r2, [r7, #20]
 80006b0:	430a      	orrs	r2, r1
 80006b2:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	79db      	ldrb	r3, [r3, #7]
 80006b8:	461a      	mov	r2, r3
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	791b      	ldrb	r3, [r3, #4]
 80006be:	005b      	lsls	r3, r3, #1
 80006c0:	fa02 f303 	lsl.w	r3, r2, r3
 80006c4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	681b      	ldr	r3, [r3, #0]
 80006ca:	68da      	ldr	r2, [r3, #12]
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	791b      	ldrb	r3, [r3, #4]
 80006d0:	005b      	lsls	r3, r3, #1
 80006d2:	2103      	movs	r1, #3
 80006d4:	fa01 f303 	lsl.w	r3, r1, r3
 80006d8:	43db      	mvns	r3, r3
 80006da:	4619      	mov	r1, r3
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	681b      	ldr	r3, [r3, #0]
 80006e0:	400a      	ands	r2, r1
 80006e2:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	68d9      	ldr	r1, [r3, #12]
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	697a      	ldr	r2, [r7, #20]
 80006f0:	430a      	orrs	r2, r1
 80006f2:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	7a1b      	ldrb	r3, [r3, #8]
 80006f8:	461a      	mov	r2, r3
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	791b      	ldrb	r3, [r3, #4]
 80006fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000702:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	685a      	ldr	r2, [r3, #4]
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	791b      	ldrb	r3, [r3, #4]
 800070e:	4619      	mov	r1, r3
 8000710:	2301      	movs	r3, #1
 8000712:	408b      	lsls	r3, r1
 8000714:	43db      	mvns	r3, r3
 8000716:	4619      	mov	r1, r3
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	400a      	ands	r2, r1
 800071e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	6859      	ldr	r1, [r3, #4]
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	697a      	ldr	r2, [r7, #20]
 800072c:	430a      	orrs	r2, r1
 800072e:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	795b      	ldrb	r3, [r3, #5]
 8000734:	2b02      	cmp	r3, #2
 8000736:	d131      	bne.n	800079c <GPIO_Init+0x2d4>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	791b      	ldrb	r3, [r3, #4]
 800073c:	08db      	lsrs	r3, r3, #3
 800073e:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	791b      	ldrb	r3, [r3, #4]
 8000744:	f003 0307 	and.w	r3, r3, #7
 8000748:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	681b      	ldr	r3, [r3, #0]
 800074e:	7c3a      	ldrb	r2, [r7, #16]
 8000750:	3208      	adds	r2, #8
 8000752:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000756:	7bfb      	ldrb	r3, [r7, #15]
 8000758:	009b      	lsls	r3, r3, #2
 800075a:	220f      	movs	r2, #15
 800075c:	fa02 f303 	lsl.w	r3, r2, r3
 8000760:	43db      	mvns	r3, r3
 8000762:	4618      	mov	r0, r3
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	7c3a      	ldrb	r2, [r7, #16]
 800076a:	4001      	ands	r1, r0
 800076c:	3208      	adds	r2, #8
 800076e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	681b      	ldr	r3, [r3, #0]
 8000776:	7c3a      	ldrb	r2, [r7, #16]
 8000778:	3208      	adds	r2, #8
 800077a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	7a5b      	ldrb	r3, [r3, #9]
 8000782:	461a      	mov	r2, r3
 8000784:	7bfb      	ldrb	r3, [r7, #15]
 8000786:	009b      	lsls	r3, r3, #2
 8000788:	fa02 f303 	lsl.w	r3, r2, r3
 800078c:	4618      	mov	r0, r3
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	7c3a      	ldrb	r2, [r7, #16]
 8000794:	4301      	orrs	r1, r0
 8000796:	3208      	adds	r2, #8
 8000798:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 800079c:	bf00      	nop
 800079e:	3718      	adds	r7, #24
 80007a0:	46bd      	mov	sp, r7
 80007a2:	bd80      	pop	{r7, pc}
 80007a4:	40013c00 	.word	0x40013c00
 80007a8:	40020000 	.word	0x40020000
 80007ac:	40020400 	.word	0x40020400
 80007b0:	40020800 	.word	0x40020800
 80007b4:	40020c00 	.word	0x40020c00
 80007b8:	40021000 	.word	0x40021000
 80007bc:	40021400 	.word	0x40021400
 80007c0:	40021800 	.word	0x40021800
 80007c4:	40021c00 	.word	0x40021c00
 80007c8:	40023800 	.word	0x40023800
 80007cc:	40013800 	.word	0x40013800

080007d0 <GPIO_WriteToOutputPin>:
 *
 * @Note              -

 */
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 80007d0:	b480      	push	{r7}
 80007d2:	b083      	sub	sp, #12
 80007d4:	af00      	add	r7, sp, #0
 80007d6:	6078      	str	r0, [r7, #4]
 80007d8:	460b      	mov	r3, r1
 80007da:	70fb      	strb	r3, [r7, #3]
 80007dc:	4613      	mov	r3, r2
 80007de:	70bb      	strb	r3, [r7, #2]

	if(Value == GPIO_PIN_SET)
 80007e0:	78bb      	ldrb	r3, [r7, #2]
 80007e2:	2b01      	cmp	r3, #1
 80007e4:	d109      	bne.n	80007fa <GPIO_WriteToOutputPin+0x2a>
	{
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx->ODR |= ( 1 << PinNumber);
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	695b      	ldr	r3, [r3, #20]
 80007ea:	78fa      	ldrb	r2, [r7, #3]
 80007ec:	2101      	movs	r1, #1
 80007ee:	fa01 f202 	lsl.w	r2, r1, r2
 80007f2:	431a      	orrs	r2, r3
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	615a      	str	r2, [r3, #20]
	}else
	{
		//write 0
		pGPIOx->ODR &= ~( 1 << PinNumber);
	}
}
 80007f8:	e009      	b.n	800080e <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~( 1 << PinNumber);
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	695b      	ldr	r3, [r3, #20]
 80007fe:	78fa      	ldrb	r2, [r7, #3]
 8000800:	2101      	movs	r1, #1
 8000802:	fa01 f202 	lsl.w	r2, r1, r2
 8000806:	43d2      	mvns	r2, r2
 8000808:	401a      	ands	r2, r3
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	615a      	str	r2, [r3, #20]
}
 800080e:	bf00      	nop
 8000810:	370c      	adds	r7, #12
 8000812:	46bd      	mov	sp, r7
 8000814:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000818:	4770      	bx	lr

0800081a <GPIO_ToggleOutputPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800081a:	b480      	push	{r7}
 800081c:	b083      	sub	sp, #12
 800081e:	af00      	add	r7, sp, #0
 8000820:	6078      	str	r0, [r7, #4]
 8000822:	460b      	mov	r3, r1
 8000824:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber); // pGPIOx->ODR = pGPIOx->ODR ^ ( 1 << PinNumber)
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	695b      	ldr	r3, [r3, #20]
 800082a:	78fa      	ldrb	r2, [r7, #3]
 800082c:	2101      	movs	r1, #1
 800082e:	fa01 f202 	lsl.w	r2, r1, r2
 8000832:	405a      	eors	r2, r3
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	615a      	str	r2, [r3, #20]
}
 8000838:	bf00      	nop
 800083a:	370c      	adds	r7, #12
 800083c:	46bd      	mov	sp, r7
 800083e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000842:	4770      	bx	lr

08000844 <GPIO_IRQInterruptConfig>:
 *
 * @Note              -

 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000844:	b480      	push	{r7}
 8000846:	b083      	sub	sp, #12
 8000848:	af00      	add	r7, sp, #0
 800084a:	4603      	mov	r3, r0
 800084c:	460a      	mov	r2, r1
 800084e:	71fb      	strb	r3, [r7, #7]
 8000850:	4613      	mov	r3, r2
 8000852:	71bb      	strb	r3, [r7, #6]
	if (EnorDi == ENABLE)
 8000854:	79bb      	ldrb	r3, [r7, #6]
 8000856:	2b01      	cmp	r3, #1
 8000858:	d133      	bne.n	80008c2 <GPIO_IRQInterruptConfig+0x7e>
	{
		if (IRQNumber <= 31)
 800085a:	79fb      	ldrb	r3, [r7, #7]
 800085c:	2b1f      	cmp	r3, #31
 800085e:	d80a      	bhi.n	8000876 <GPIO_IRQInterruptConfig+0x32>
		{
//			program ISER0 Register
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000860:	4b35      	ldr	r3, [pc, #212]	@ (8000938 <GPIO_IRQInterruptConfig+0xf4>)
 8000862:	681b      	ldr	r3, [r3, #0]
 8000864:	79fa      	ldrb	r2, [r7, #7]
 8000866:	2101      	movs	r1, #1
 8000868:	fa01 f202 	lsl.w	r2, r1, r2
 800086c:	4611      	mov	r1, r2
 800086e:	4a32      	ldr	r2, [pc, #200]	@ (8000938 <GPIO_IRQInterruptConfig+0xf4>)
 8000870:	430b      	orrs	r3, r1
 8000872:	6013      	str	r3, [r2, #0]
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}

	}

}
 8000874:	e059      	b.n	800092a <GPIO_IRQInterruptConfig+0xe6>
		}else if (IRQNumber > 31 && IRQNumber < 64)
 8000876:	79fb      	ldrb	r3, [r7, #7]
 8000878:	2b1f      	cmp	r3, #31
 800087a:	d90f      	bls.n	800089c <GPIO_IRQInterruptConfig+0x58>
 800087c:	79fb      	ldrb	r3, [r7, #7]
 800087e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000880:	d80c      	bhi.n	800089c <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 8000882:	4b2e      	ldr	r3, [pc, #184]	@ (800093c <GPIO_IRQInterruptConfig+0xf8>)
 8000884:	681b      	ldr	r3, [r3, #0]
 8000886:	79fa      	ldrb	r2, [r7, #7]
 8000888:	f002 021f 	and.w	r2, r2, #31
 800088c:	2101      	movs	r1, #1
 800088e:	fa01 f202 	lsl.w	r2, r1, r2
 8000892:	4611      	mov	r1, r2
 8000894:	4a29      	ldr	r2, [pc, #164]	@ (800093c <GPIO_IRQInterruptConfig+0xf8>)
 8000896:	430b      	orrs	r3, r1
 8000898:	6013      	str	r3, [r2, #0]
 800089a:	e046      	b.n	800092a <GPIO_IRQInterruptConfig+0xe6>
		else if (IRQNumber >= 64 && IRQNumber < 96)
 800089c:	79fb      	ldrb	r3, [r7, #7]
 800089e:	2b3f      	cmp	r3, #63	@ 0x3f
 80008a0:	d943      	bls.n	800092a <GPIO_IRQInterruptConfig+0xe6>
 80008a2:	79fb      	ldrb	r3, [r7, #7]
 80008a4:	2b5f      	cmp	r3, #95	@ 0x5f
 80008a6:	d840      	bhi.n	800092a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 80008a8:	4b25      	ldr	r3, [pc, #148]	@ (8000940 <GPIO_IRQInterruptConfig+0xfc>)
 80008aa:	681b      	ldr	r3, [r3, #0]
 80008ac:	79fa      	ldrb	r2, [r7, #7]
 80008ae:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80008b2:	2101      	movs	r1, #1
 80008b4:	fa01 f202 	lsl.w	r2, r1, r2
 80008b8:	4611      	mov	r1, r2
 80008ba:	4a21      	ldr	r2, [pc, #132]	@ (8000940 <GPIO_IRQInterruptConfig+0xfc>)
 80008bc:	430b      	orrs	r3, r1
 80008be:	6013      	str	r3, [r2, #0]
}
 80008c0:	e033      	b.n	800092a <GPIO_IRQInterruptConfig+0xe6>
		if (IRQNumber <= 31)
 80008c2:	79fb      	ldrb	r3, [r7, #7]
 80008c4:	2b1f      	cmp	r3, #31
 80008c6:	d80a      	bhi.n	80008de <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80008c8:	4b1e      	ldr	r3, [pc, #120]	@ (8000944 <GPIO_IRQInterruptConfig+0x100>)
 80008ca:	681b      	ldr	r3, [r3, #0]
 80008cc:	79fa      	ldrb	r2, [r7, #7]
 80008ce:	2101      	movs	r1, #1
 80008d0:	fa01 f202 	lsl.w	r2, r1, r2
 80008d4:	4611      	mov	r1, r2
 80008d6:	4a1b      	ldr	r2, [pc, #108]	@ (8000944 <GPIO_IRQInterruptConfig+0x100>)
 80008d8:	430b      	orrs	r3, r1
 80008da:	6013      	str	r3, [r2, #0]
}
 80008dc:	e025      	b.n	800092a <GPIO_IRQInterruptConfig+0xe6>
		}else if (IRQNumber > 31 && IRQNumber < 64)
 80008de:	79fb      	ldrb	r3, [r7, #7]
 80008e0:	2b1f      	cmp	r3, #31
 80008e2:	d90f      	bls.n	8000904 <GPIO_IRQInterruptConfig+0xc0>
 80008e4:	79fb      	ldrb	r3, [r7, #7]
 80008e6:	2b3f      	cmp	r3, #63	@ 0x3f
 80008e8:	d80c      	bhi.n	8000904 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80008ea:	4b17      	ldr	r3, [pc, #92]	@ (8000948 <GPIO_IRQInterruptConfig+0x104>)
 80008ec:	681b      	ldr	r3, [r3, #0]
 80008ee:	79fa      	ldrb	r2, [r7, #7]
 80008f0:	f002 021f 	and.w	r2, r2, #31
 80008f4:	2101      	movs	r1, #1
 80008f6:	fa01 f202 	lsl.w	r2, r1, r2
 80008fa:	4611      	mov	r1, r2
 80008fc:	4a12      	ldr	r2, [pc, #72]	@ (8000948 <GPIO_IRQInterruptConfig+0x104>)
 80008fe:	430b      	orrs	r3, r1
 8000900:	6013      	str	r3, [r2, #0]
 8000902:	e012      	b.n	800092a <GPIO_IRQInterruptConfig+0xe6>
		else if (IRQNumber >= 64 && IRQNumber < 96)
 8000904:	79fb      	ldrb	r3, [r7, #7]
 8000906:	2b3f      	cmp	r3, #63	@ 0x3f
 8000908:	d90f      	bls.n	800092a <GPIO_IRQInterruptConfig+0xe6>
 800090a:	79fb      	ldrb	r3, [r7, #7]
 800090c:	2b5f      	cmp	r3, #95	@ 0x5f
 800090e:	d80c      	bhi.n	800092a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000910:	4b0e      	ldr	r3, [pc, #56]	@ (800094c <GPIO_IRQInterruptConfig+0x108>)
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	79fa      	ldrb	r2, [r7, #7]
 8000916:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800091a:	2101      	movs	r1, #1
 800091c:	fa01 f202 	lsl.w	r2, r1, r2
 8000920:	4611      	mov	r1, r2
 8000922:	4a0a      	ldr	r2, [pc, #40]	@ (800094c <GPIO_IRQInterruptConfig+0x108>)
 8000924:	430b      	orrs	r3, r1
 8000926:	6013      	str	r3, [r2, #0]
}
 8000928:	e7ff      	b.n	800092a <GPIO_IRQInterruptConfig+0xe6>
 800092a:	bf00      	nop
 800092c:	370c      	adds	r7, #12
 800092e:	46bd      	mov	sp, r7
 8000930:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000934:	4770      	bx	lr
 8000936:	bf00      	nop
 8000938:	e000e100 	.word	0xe000e100
 800093c:	e000e104 	.word	0xe000e104
 8000940:	e000e108 	.word	0xe000e108
 8000944:	e000e180 	.word	0xe000e180
 8000948:	e000e184 	.word	0xe000e184
 800094c:	e000e188 	.word	0xe000e188

08000950 <GPIO_IRQPriorityConfig>:
 *
 * @Note              -

 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000950:	b480      	push	{r7}
 8000952:	b085      	sub	sp, #20
 8000954:	af00      	add	r7, sp, #0
 8000956:	4603      	mov	r3, r0
 8000958:	6039      	str	r1, [r7, #0]
 800095a:	71fb      	strb	r3, [r7, #7]
//	1. Find out ipr register
	uint8_t iprx = IRQNumber/4;
 800095c:	79fb      	ldrb	r3, [r7, #7]
 800095e:	089b      	lsrs	r3, r3, #2
 8000960:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber%4;
 8000962:	79fb      	ldrb	r3, [r7, #7]
 8000964:	f003 0303 	and.w	r3, r3, #3
 8000968:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount =  (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 800096a:	7bbb      	ldrb	r3, [r7, #14]
 800096c:	00db      	lsls	r3, r3, #3
 800096e:	b2db      	uxtb	r3, r3
 8000970:	3304      	adds	r3, #4
 8000972:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000974:	7bfb      	ldrb	r3, [r7, #15]
 8000976:	009b      	lsls	r3, r3, #2
 8000978:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 800097c:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000980:	6819      	ldr	r1, [r3, #0]
 8000982:	7b7b      	ldrb	r3, [r7, #13]
 8000984:	683a      	ldr	r2, [r7, #0]
 8000986:	409a      	lsls	r2, r3
 8000988:	7bfb      	ldrb	r3, [r7, #15]
 800098a:	009b      	lsls	r3, r3, #2
 800098c:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000990:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000994:	430a      	orrs	r2, r1
 8000996:	601a      	str	r2, [r3, #0]
}
 8000998:	bf00      	nop
 800099a:	3714      	adds	r7, #20
 800099c:	46bd      	mov	sp, r7
 800099e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009a2:	4770      	bx	lr

080009a4 <GPIO_IRQHandling>:
 *
 * @Note              -

 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 80009a4:	b480      	push	{r7}
 80009a6:	b083      	sub	sp, #12
 80009a8:	af00      	add	r7, sp, #0
 80009aa:	4603      	mov	r3, r0
 80009ac:	71fb      	strb	r3, [r7, #7]
//	Clear the EXTI PR register corresponding to the pin number
	if(EXTI->PR & (1 << PinNumber))
 80009ae:	4b0c      	ldr	r3, [pc, #48]	@ (80009e0 <GPIO_IRQHandling+0x3c>)
 80009b0:	695b      	ldr	r3, [r3, #20]
 80009b2:	79fa      	ldrb	r2, [r7, #7]
 80009b4:	2101      	movs	r1, #1
 80009b6:	fa01 f202 	lsl.w	r2, r1, r2
 80009ba:	4013      	ands	r3, r2
 80009bc:	2b00      	cmp	r3, #0
 80009be:	d009      	beq.n	80009d4 <GPIO_IRQHandling+0x30>
	{
//		clear
		EXTI->PR |= (1 << PinNumber);
 80009c0:	4b07      	ldr	r3, [pc, #28]	@ (80009e0 <GPIO_IRQHandling+0x3c>)
 80009c2:	695b      	ldr	r3, [r3, #20]
 80009c4:	79fa      	ldrb	r2, [r7, #7]
 80009c6:	2101      	movs	r1, #1
 80009c8:	fa01 f202 	lsl.w	r2, r1, r2
 80009cc:	4611      	mov	r1, r2
 80009ce:	4a04      	ldr	r2, [pc, #16]	@ (80009e0 <GPIO_IRQHandling+0x3c>)
 80009d0:	430b      	orrs	r3, r1
 80009d2:	6153      	str	r3, [r2, #20]
	}
}
 80009d4:	bf00      	nop
 80009d6:	370c      	adds	r7, #12
 80009d8:	46bd      	mov	sp, r7
 80009da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009de:	4770      	bx	lr
 80009e0:	40013c00 	.word	0x40013c00

080009e4 <memset>:
 80009e4:	4402      	add	r2, r0
 80009e6:	4603      	mov	r3, r0
 80009e8:	4293      	cmp	r3, r2
 80009ea:	d100      	bne.n	80009ee <memset+0xa>
 80009ec:	4770      	bx	lr
 80009ee:	f803 1b01 	strb.w	r1, [r3], #1
 80009f2:	e7f9      	b.n	80009e8 <memset+0x4>

080009f4 <__libc_init_array>:
 80009f4:	b570      	push	{r4, r5, r6, lr}
 80009f6:	4d0d      	ldr	r5, [pc, #52]	@ (8000a2c <__libc_init_array+0x38>)
 80009f8:	4c0d      	ldr	r4, [pc, #52]	@ (8000a30 <__libc_init_array+0x3c>)
 80009fa:	1b64      	subs	r4, r4, r5
 80009fc:	10a4      	asrs	r4, r4, #2
 80009fe:	2600      	movs	r6, #0
 8000a00:	42a6      	cmp	r6, r4
 8000a02:	d109      	bne.n	8000a18 <__libc_init_array+0x24>
 8000a04:	4d0b      	ldr	r5, [pc, #44]	@ (8000a34 <__libc_init_array+0x40>)
 8000a06:	4c0c      	ldr	r4, [pc, #48]	@ (8000a38 <__libc_init_array+0x44>)
 8000a08:	f000 f818 	bl	8000a3c <_init>
 8000a0c:	1b64      	subs	r4, r4, r5
 8000a0e:	10a4      	asrs	r4, r4, #2
 8000a10:	2600      	movs	r6, #0
 8000a12:	42a6      	cmp	r6, r4
 8000a14:	d105      	bne.n	8000a22 <__libc_init_array+0x2e>
 8000a16:	bd70      	pop	{r4, r5, r6, pc}
 8000a18:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a1c:	4798      	blx	r3
 8000a1e:	3601      	adds	r6, #1
 8000a20:	e7ee      	b.n	8000a00 <__libc_init_array+0xc>
 8000a22:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a26:	4798      	blx	r3
 8000a28:	3601      	adds	r6, #1
 8000a2a:	e7f2      	b.n	8000a12 <__libc_init_array+0x1e>
 8000a2c:	08000a54 	.word	0x08000a54
 8000a30:	08000a54 	.word	0x08000a54
 8000a34:	08000a54 	.word	0x08000a54
 8000a38:	08000a58 	.word	0x08000a58

08000a3c <_init>:
 8000a3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a3e:	bf00      	nop
 8000a40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a42:	bc08      	pop	{r3}
 8000a44:	469e      	mov	lr, r3
 8000a46:	4770      	bx	lr

08000a48 <_fini>:
 8000a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a4a:	bf00      	nop
 8000a4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a4e:	bc08      	pop	{r3}
 8000a50:	469e      	mov	lr, r3
 8000a52:	4770      	bx	lr
