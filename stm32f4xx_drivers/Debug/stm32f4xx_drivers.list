
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004cc  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000654  0800065c  0000165c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000654  08000654  0000165c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000654  08000654  0000165c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000654  0800065c  0000165c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000654  08000654  00001654  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000658  08000658  00001658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000165c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000165c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000165c  2**0
                  CONTENTS, READONLY
 13 .debug_line   00000cec  00000000  00000000  0000168c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line_str 0000004f  00000000  00000000  00002378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_info   0000083a  00000000  00000000  000023c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 000002bf  00000000  00000000  00002c01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 000000a8  00000000  00000000  00002ec0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000537e  00000000  00000000  00002f68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_rnglists 00000072  00000000  00000000  000082e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  00000561  00000000  00000000  00008358  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .comment      00000043  00000000  00000000  000088b9  2**0
                  CONTENTS, READONLY
 22 .debug_frame  000001d0  00000000  00000000  000088fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800063c 	.word	0x0800063c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	0800063c 	.word	0x0800063c

080001c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001c8:	480d      	ldr	r0, [pc, #52]	@ (8000200 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001ca:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001cc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001d0:	480c      	ldr	r0, [pc, #48]	@ (8000204 <LoopForever+0x6>)
  ldr r1, =_edata
 80001d2:	490d      	ldr	r1, [pc, #52]	@ (8000208 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001d4:	4a0d      	ldr	r2, [pc, #52]	@ (800020c <LoopForever+0xe>)
  movs r3, #0
 80001d6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001d8:	e002      	b.n	80001e0 <LoopCopyDataInit>

080001da <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001da:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001dc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001de:	3304      	adds	r3, #4

080001e0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001e0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001e2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001e4:	d3f9      	bcc.n	80001da <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001e6:	4a0a      	ldr	r2, [pc, #40]	@ (8000210 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001e8:	4c0a      	ldr	r4, [pc, #40]	@ (8000214 <LoopForever+0x16>)
  movs r3, #0
 80001ea:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001ec:	e001      	b.n	80001f2 <LoopFillZerobss>

080001ee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001ee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001f0:	3204      	adds	r2, #4

080001f2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001f2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001f4:	d3fb      	bcc.n	80001ee <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001f6:	f000 f9fd 	bl	80005f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001fa:	f000 f80f 	bl	800021c <main>

080001fe <LoopForever>:

LoopForever:
  b LoopForever
 80001fe:	e7fe      	b.n	80001fe <LoopForever>
  ldr   r0, =_estack
 8000200:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000204:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000208:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800020c:	0800065c 	.word	0x0800065c
  ldr r2, =_sbss
 8000210:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000214:	2000001c 	.word	0x2000001c

08000218 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000218:	e7fe      	b.n	8000218 <ADC_IRQHandler>
	...

0800021c <main>:
{
	for(uint32_t i = 0; i < 500000; i++);
}

int main(void)
{
 800021c:	b580      	push	{r7, lr}
 800021e:	b084      	sub	sp, #16
 8000220:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOD;
 8000222:	4b0c      	ldr	r3, [pc, #48]	@ (8000254 <main+0x38>)
 8000224:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000226:	230c      	movs	r3, #12
 8000228:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800022a:	2301      	movs	r3, #1
 800022c:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800022e:	2302      	movs	r3, #2
 8000230:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000232:	2300      	movs	r3, #0
 8000234:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000236:	2300      	movs	r3, #0
 8000238:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 800023a:	2101      	movs	r1, #1
 800023c:	4805      	ldr	r0, [pc, #20]	@ (8000254 <main+0x38>)
 800023e:	f000 f80b 	bl	8000258 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000242:	1d3b      	adds	r3, r7, #4
 8000244:	4618      	mov	r0, r3
 8000246:	f000 f8ef 	bl	8000428 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 800024a:	210c      	movs	r1, #12
 800024c:	4801      	ldr	r0, [pc, #4]	@ (8000254 <main+0x38>)
 800024e:	f000 f9bb 	bl	80005c8 <GPIO_ToggleOutputPin>
 8000252:	e7fa      	b.n	800024a <main+0x2e>
 8000254:	40020c00 	.word	0x40020c00

08000258 <GPIO_PeriClockControl>:
 * @Note              -  none

 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000258:	b480      	push	{r7}
 800025a:	b083      	sub	sp, #12
 800025c:	af00      	add	r7, sp, #0
 800025e:	6078      	str	r0, [r7, #4]
 8000260:	460b      	mov	r3, r1
 8000262:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000264:	78fb      	ldrb	r3, [r7, #3]
 8000266:	2b01      	cmp	r3, #1
 8000268:	d162      	bne.n	8000330 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	4a64      	ldr	r2, [pc, #400]	@ (8000400 <GPIO_PeriClockControl+0x1a8>)
 800026e:	4293      	cmp	r3, r2
 8000270:	d106      	bne.n	8000280 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000272:	4b64      	ldr	r3, [pc, #400]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000274:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000276:	4a63      	ldr	r2, [pc, #396]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000278:	f043 0301 	orr.w	r3, r3, #1
 800027c:	6313      	str	r3, [r2, #48]	@ 0x30
			GPIOI_PCLK_DI();
		}

	}

}
 800027e:	e0b9      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4a61      	ldr	r2, [pc, #388]	@ (8000408 <GPIO_PeriClockControl+0x1b0>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d106      	bne.n	8000296 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000288:	4b5e      	ldr	r3, [pc, #376]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 800028a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800028c:	4a5d      	ldr	r2, [pc, #372]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 800028e:	f043 0302 	orr.w	r3, r3, #2
 8000292:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000294:	e0ae      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a5c      	ldr	r2, [pc, #368]	@ (800040c <GPIO_PeriClockControl+0x1b4>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d106      	bne.n	80002ac <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800029e:	4b59      	ldr	r3, [pc, #356]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002a2:	4a58      	ldr	r2, [pc, #352]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002a4:	f043 0304 	orr.w	r3, r3, #4
 80002a8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002aa:	e0a3      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a58      	ldr	r2, [pc, #352]	@ (8000410 <GPIO_PeriClockControl+0x1b8>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d106      	bne.n	80002c2 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80002b4:	4b53      	ldr	r3, [pc, #332]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002b8:	4a52      	ldr	r2, [pc, #328]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002ba:	f043 0308 	orr.w	r3, r3, #8
 80002be:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002c0:	e098      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a53      	ldr	r2, [pc, #332]	@ (8000414 <GPIO_PeriClockControl+0x1bc>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d106      	bne.n	80002d8 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80002ca:	4b4e      	ldr	r3, [pc, #312]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002ce:	4a4d      	ldr	r2, [pc, #308]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002d0:	f043 0310 	orr.w	r3, r3, #16
 80002d4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002d6:	e08d      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a4f      	ldr	r2, [pc, #316]	@ (8000418 <GPIO_PeriClockControl+0x1c0>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d106      	bne.n	80002ee <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80002e0:	4b48      	ldr	r3, [pc, #288]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002e4:	4a47      	ldr	r2, [pc, #284]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002e6:	f043 0320 	orr.w	r3, r3, #32
 80002ea:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002ec:	e082      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4a4a      	ldr	r2, [pc, #296]	@ (800041c <GPIO_PeriClockControl+0x1c4>)
 80002f2:	4293      	cmp	r3, r2
 80002f4:	d106      	bne.n	8000304 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80002f6:	4b43      	ldr	r3, [pc, #268]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002fa:	4a42      	ldr	r2, [pc, #264]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80002fc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000300:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000302:	e077      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a46      	ldr	r2, [pc, #280]	@ (8000420 <GPIO_PeriClockControl+0x1c8>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d106      	bne.n	800031a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800030c:	4b3d      	ldr	r3, [pc, #244]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 800030e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000310:	4a3c      	ldr	r2, [pc, #240]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000312:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000316:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000318:	e06c      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	4a41      	ldr	r2, [pc, #260]	@ (8000424 <GPIO_PeriClockControl+0x1cc>)
 800031e:	4293      	cmp	r3, r2
 8000320:	d168      	bne.n	80003f4 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000322:	4b38      	ldr	r3, [pc, #224]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000324:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000326:	4a37      	ldr	r2, [pc, #220]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000328:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800032c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800032e:	e061      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	4a33      	ldr	r2, [pc, #204]	@ (8000400 <GPIO_PeriClockControl+0x1a8>)
 8000334:	4293      	cmp	r3, r2
 8000336:	d106      	bne.n	8000346 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8000338:	4b32      	ldr	r3, [pc, #200]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 800033a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800033c:	4a31      	ldr	r2, [pc, #196]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 800033e:	f023 0301 	bic.w	r3, r3, #1
 8000342:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000344:	e056      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	4a2f      	ldr	r2, [pc, #188]	@ (8000408 <GPIO_PeriClockControl+0x1b0>)
 800034a:	4293      	cmp	r3, r2
 800034c:	d106      	bne.n	800035c <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_EN();
 800034e:	4b2d      	ldr	r3, [pc, #180]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000350:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000352:	4a2c      	ldr	r2, [pc, #176]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000354:	f043 0302 	orr.w	r3, r3, #2
 8000358:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800035a:	e04b      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	4a2b      	ldr	r2, [pc, #172]	@ (800040c <GPIO_PeriClockControl+0x1b4>)
 8000360:	4293      	cmp	r3, r2
 8000362:	d106      	bne.n	8000372 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000364:	4b27      	ldr	r3, [pc, #156]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000366:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000368:	4a26      	ldr	r2, [pc, #152]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 800036a:	f023 0304 	bic.w	r3, r3, #4
 800036e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000370:	e040      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	4a26      	ldr	r2, [pc, #152]	@ (8000410 <GPIO_PeriClockControl+0x1b8>)
 8000376:	4293      	cmp	r3, r2
 8000378:	d106      	bne.n	8000388 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 800037a:	4b22      	ldr	r3, [pc, #136]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 800037c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800037e:	4a21      	ldr	r2, [pc, #132]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000380:	f023 0308 	bic.w	r3, r3, #8
 8000384:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000386:	e035      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	4a22      	ldr	r2, [pc, #136]	@ (8000414 <GPIO_PeriClockControl+0x1bc>)
 800038c:	4293      	cmp	r3, r2
 800038e:	d106      	bne.n	800039e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000390:	4b1c      	ldr	r3, [pc, #112]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000392:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000394:	4a1b      	ldr	r2, [pc, #108]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 8000396:	f023 0310 	bic.w	r3, r3, #16
 800039a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800039c:	e02a      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	4a1d      	ldr	r2, [pc, #116]	@ (8000418 <GPIO_PeriClockControl+0x1c0>)
 80003a2:	4293      	cmp	r3, r2
 80003a4:	d106      	bne.n	80003b4 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 80003a6:	4b17      	ldr	r3, [pc, #92]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80003a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003aa:	4a16      	ldr	r2, [pc, #88]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80003ac:	f023 0320 	bic.w	r3, r3, #32
 80003b0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b2:	e01f      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	4a19      	ldr	r2, [pc, #100]	@ (800041c <GPIO_PeriClockControl+0x1c4>)
 80003b8:	4293      	cmp	r3, r2
 80003ba:	d106      	bne.n	80003ca <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 80003bc:	4b11      	ldr	r3, [pc, #68]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80003be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003c0:	4a10      	ldr	r2, [pc, #64]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80003c2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80003c6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c8:	e014      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	4a14      	ldr	r2, [pc, #80]	@ (8000420 <GPIO_PeriClockControl+0x1c8>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d106      	bne.n	80003e0 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 80003d2:	4b0c      	ldr	r3, [pc, #48]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80003d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d6:	4a0b      	ldr	r2, [pc, #44]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80003d8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80003dc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003de:	e009      	b.n	80003f4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	4a10      	ldr	r2, [pc, #64]	@ (8000424 <GPIO_PeriClockControl+0x1cc>)
 80003e4:	4293      	cmp	r3, r2
 80003e6:	d105      	bne.n	80003f4 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 80003e8:	4b06      	ldr	r3, [pc, #24]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80003ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ec:	4a05      	ldr	r2, [pc, #20]	@ (8000404 <GPIO_PeriClockControl+0x1ac>)
 80003ee:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80003f2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003f4:	bf00      	nop
 80003f6:	370c      	adds	r7, #12
 80003f8:	46bd      	mov	sp, r7
 80003fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003fe:	4770      	bx	lr
 8000400:	40020000 	.word	0x40020000
 8000404:	40023800 	.word	0x40023800
 8000408:	40020400 	.word	0x40020400
 800040c:	40020800 	.word	0x40020800
 8000410:	40020c00 	.word	0x40020c00
 8000414:	40021000 	.word	0x40021000
 8000418:	40021400 	.word	0x40021400
 800041c:	40021800 	.word	0x40021800
 8000420:	40021c00 	.word	0x40021c00
 8000424:	40022000 	.word	0x40022000

08000428 <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000428:	b580      	push	{r7, lr}
 800042a:	b084      	sub	sp, #16
 800042c:	af00      	add	r7, sp, #0
 800042e:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 8000430:	2300      	movs	r3, #0
 8000432:	60fb      	str	r3, [r7, #12]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	2101      	movs	r1, #1
 800043a:	4618      	mov	r0, r3
 800043c:	f7ff ff0c 	bl	8000258 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	795b      	ldrb	r3, [r3, #5]
 8000444:	2b03      	cmp	r3, #3
 8000446:	d820      	bhi.n	800048a <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	795b      	ldrb	r3, [r3, #5]
 800044c:	461a      	mov	r2, r3
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	791b      	ldrb	r3, [r3, #4]
 8000452:	005b      	lsls	r3, r3, #1
 8000454:	fa02 f303 	lsl.w	r3, r2, r3
 8000458:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	681a      	ldr	r2, [r3, #0]
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	791b      	ldrb	r3, [r3, #4]
 8000464:	005b      	lsls	r3, r3, #1
 8000466:	2103      	movs	r1, #3
 8000468:	fa01 f303 	lsl.w	r3, r1, r3
 800046c:	43db      	mvns	r3, r3
 800046e:	4619      	mov	r1, r3
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	400a      	ands	r2, r1
 8000476:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	6819      	ldr	r1, [r3, #0]
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	68fa      	ldr	r2, [r7, #12]
 8000484:	430a      	orrs	r2, r1
 8000486:	601a      	str	r2, [r3, #0]
 8000488:	e006      	b.n	8000498 <GPIO_Init+0x70>

	}else
	{
		//this part will code later . ( interrupt mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	795b      	ldrb	r3, [r3, #5]
 800048e:	2b04      	cmp	r3, #4
 8000490:	d002      	beq.n	8000498 <GPIO_Init+0x70>
			//1. configure the FTSR
			//EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
			//Clear the corresponding RTSR bit
//			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	795b      	ldrb	r3, [r3, #5]
 8000496:	2b05      	cmp	r3, #5
		//3 . enable the exti interrupt delivery using IMR
//		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	799b      	ldrb	r3, [r3, #6]
 800049c:	461a      	mov	r2, r3
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	791b      	ldrb	r3, [r3, #4]
 80004a2:	005b      	lsls	r3, r3, #1
 80004a4:	fa02 f303 	lsl.w	r3, r2, r3
 80004a8:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	689a      	ldr	r2, [r3, #8]
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	791b      	ldrb	r3, [r3, #4]
 80004b4:	005b      	lsls	r3, r3, #1
 80004b6:	2103      	movs	r1, #3
 80004b8:	fa01 f303 	lsl.w	r3, r1, r3
 80004bc:	43db      	mvns	r3, r3
 80004be:	4619      	mov	r1, r3
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	400a      	ands	r2, r1
 80004c6:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	6899      	ldr	r1, [r3, #8]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	68fa      	ldr	r2, [r7, #12]
 80004d4:	430a      	orrs	r2, r1
 80004d6:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	79db      	ldrb	r3, [r3, #7]
 80004dc:	461a      	mov	r2, r3
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	791b      	ldrb	r3, [r3, #4]
 80004e2:	005b      	lsls	r3, r3, #1
 80004e4:	fa02 f303 	lsl.w	r3, r2, r3
 80004e8:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	68da      	ldr	r2, [r3, #12]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	791b      	ldrb	r3, [r3, #4]
 80004f4:	005b      	lsls	r3, r3, #1
 80004f6:	2103      	movs	r1, #3
 80004f8:	fa01 f303 	lsl.w	r3, r1, r3
 80004fc:	43db      	mvns	r3, r3
 80004fe:	4619      	mov	r1, r3
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	400a      	ands	r2, r1
 8000506:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	68d9      	ldr	r1, [r3, #12]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	68fa      	ldr	r2, [r7, #12]
 8000514:	430a      	orrs	r2, r1
 8000516:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	7a1b      	ldrb	r3, [r3, #8]
 800051c:	461a      	mov	r2, r3
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	791b      	ldrb	r3, [r3, #4]
 8000522:	fa02 f303 	lsl.w	r3, r2, r3
 8000526:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	685a      	ldr	r2, [r3, #4]
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	791b      	ldrb	r3, [r3, #4]
 8000532:	4619      	mov	r1, r3
 8000534:	2301      	movs	r3, #1
 8000536:	408b      	lsls	r3, r1
 8000538:	43db      	mvns	r3, r3
 800053a:	4619      	mov	r1, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	400a      	ands	r2, r1
 8000542:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	6859      	ldr	r1, [r3, #4]
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	68fa      	ldr	r2, [r7, #12]
 8000550:	430a      	orrs	r2, r1
 8000552:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	795b      	ldrb	r3, [r3, #5]
 8000558:	2b02      	cmp	r3, #2
 800055a:	d131      	bne.n	80005c0 <GPIO_Init+0x198>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	791b      	ldrb	r3, [r3, #4]
 8000560:	08db      	lsrs	r3, r3, #3
 8000562:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	791b      	ldrb	r3, [r3, #4]
 8000568:	f003 0307 	and.w	r3, r3, #7
 800056c:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	7afa      	ldrb	r2, [r7, #11]
 8000574:	3208      	adds	r2, #8
 8000576:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800057a:	7abb      	ldrb	r3, [r7, #10]
 800057c:	009b      	lsls	r3, r3, #2
 800057e:	220f      	movs	r2, #15
 8000580:	fa02 f303 	lsl.w	r3, r2, r3
 8000584:	43db      	mvns	r3, r3
 8000586:	4618      	mov	r0, r3
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	7afa      	ldrb	r2, [r7, #11]
 800058e:	4001      	ands	r1, r0
 8000590:	3208      	adds	r2, #8
 8000592:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	7afa      	ldrb	r2, [r7, #11]
 800059c:	3208      	adds	r2, #8
 800059e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	7a5b      	ldrb	r3, [r3, #9]
 80005a6:	461a      	mov	r2, r3
 80005a8:	7abb      	ldrb	r3, [r7, #10]
 80005aa:	009b      	lsls	r3, r3, #2
 80005ac:	fa02 f303 	lsl.w	r3, r2, r3
 80005b0:	4618      	mov	r0, r3
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	7afa      	ldrb	r2, [r7, #11]
 80005b8:	4301      	orrs	r1, r0
 80005ba:	3208      	adds	r2, #8
 80005bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80005c0:	bf00      	nop
 80005c2:	3710      	adds	r7, #16
 80005c4:	46bd      	mov	sp, r7
 80005c6:	bd80      	pop	{r7, pc}

080005c8 <GPIO_ToggleOutputPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80005c8:	b480      	push	{r7}
 80005ca:	b083      	sub	sp, #12
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	6078      	str	r0, [r7, #4]
 80005d0:	460b      	mov	r3, r1
 80005d2:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber); // pGPIOx->ODR = pGPIOx->ODR ^ ( 1 << PinNumber)
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	695b      	ldr	r3, [r3, #20]
 80005d8:	78fa      	ldrb	r2, [r7, #3]
 80005da:	2101      	movs	r1, #1
 80005dc:	fa01 f202 	lsl.w	r2, r1, r2
 80005e0:	405a      	eors	r2, r3
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	615a      	str	r2, [r3, #20]
}
 80005e6:	bf00      	nop
 80005e8:	370c      	adds	r7, #12
 80005ea:	46bd      	mov	sp, r7
 80005ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f0:	4770      	bx	lr
	...

080005f4 <__libc_init_array>:
 80005f4:	b570      	push	{r4, r5, r6, lr}
 80005f6:	4d0d      	ldr	r5, [pc, #52]	@ (800062c <__libc_init_array+0x38>)
 80005f8:	4c0d      	ldr	r4, [pc, #52]	@ (8000630 <__libc_init_array+0x3c>)
 80005fa:	1b64      	subs	r4, r4, r5
 80005fc:	10a4      	asrs	r4, r4, #2
 80005fe:	2600      	movs	r6, #0
 8000600:	42a6      	cmp	r6, r4
 8000602:	d109      	bne.n	8000618 <__libc_init_array+0x24>
 8000604:	4d0b      	ldr	r5, [pc, #44]	@ (8000634 <__libc_init_array+0x40>)
 8000606:	4c0c      	ldr	r4, [pc, #48]	@ (8000638 <__libc_init_array+0x44>)
 8000608:	f000 f818 	bl	800063c <_init>
 800060c:	1b64      	subs	r4, r4, r5
 800060e:	10a4      	asrs	r4, r4, #2
 8000610:	2600      	movs	r6, #0
 8000612:	42a6      	cmp	r6, r4
 8000614:	d105      	bne.n	8000622 <__libc_init_array+0x2e>
 8000616:	bd70      	pop	{r4, r5, r6, pc}
 8000618:	f855 3b04 	ldr.w	r3, [r5], #4
 800061c:	4798      	blx	r3
 800061e:	3601      	adds	r6, #1
 8000620:	e7ee      	b.n	8000600 <__libc_init_array+0xc>
 8000622:	f855 3b04 	ldr.w	r3, [r5], #4
 8000626:	4798      	blx	r3
 8000628:	3601      	adds	r6, #1
 800062a:	e7f2      	b.n	8000612 <__libc_init_array+0x1e>
 800062c:	08000654 	.word	0x08000654
 8000630:	08000654 	.word	0x08000654
 8000634:	08000654 	.word	0x08000654
 8000638:	08000658 	.word	0x08000658

0800063c <_init>:
 800063c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800063e:	bf00      	nop
 8000640:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000642:	bc08      	pop	{r3}
 8000644:	469e      	mov	lr, r3
 8000646:	4770      	bx	lr

08000648 <_fini>:
 8000648:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800064a:	bf00      	nop
 800064c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800064e:	bc08      	pop	{r3}
 8000650:	469e      	mov	lr, r3
 8000652:	4770      	bx	lr
